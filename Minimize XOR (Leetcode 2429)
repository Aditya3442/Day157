class Solution {
    public int set(int num , int bits){
        num = num | (1 << bits);
        return num;
    }
    public int unset(int num , int bits){
        num = num & (~ (1 << bits));
        return num;
    }
    public boolean isSet(int num , int bits){
        if((num & (1 << bits)) != 0)
           return true;
        else
           return false;
    }
    public int minimizeXor(int num1, int num2) {
        int x = num1;
        int currBits = Integer.bitCount(x);
        int requiredBits = Integer.bitCount(num2);

        int bits = 0;
        while(currBits < requiredBits){
            if(!isSet(x , bits)){
                x = set(x , bits);
                currBits++;
            }
            bits++;
        }
        while(currBits > requiredBits){
            if(isSet(x , bits)){
                x = unset(x , bits);
                currBits--;
            }
            bits++;
        }
        return x;
    }
}
